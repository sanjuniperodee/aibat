#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ JavaScript —Ñ–∞–π–ª–æ–≤
 * –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ JS —Ñ–∞–π–ª—ã –≤ –æ–¥–∏–Ω –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
 */

const JS_DIR = path.join(__dirname, '../js');
const OUTPUT_FILE = path.join(__dirname, '../dist/script.min.js');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dist –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
const distDir = path.dirname(OUTPUT_FILE);
if (!fs.existsSync(distDir)) {
  fs.mkdirSync(distDir, { recursive: true });
}

function buildJS() {
  console.log('üî® –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É JavaScript...');
  
  try {
    // –ß–∏—Ç–∞–µ–º –≤—Å–µ JS —Ñ–∞–π–ª—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    const jsFiles = [
      'core.min.js',
      'main.js',
      'site-stat.js'
    ];
    
    let combinedJS = '';
    
    jsFiles.forEach(file => {
      const filePath = path.join(JS_DIR, file);
      if (fs.existsSync(filePath)) {
        console.log(`üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${file}`);
        const content = fs.readFileSync(filePath, 'utf8');
        combinedJS += `// ${file}\n${content}\n\n`;
      } else {
        console.warn(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${file}`);
      }
    });
    
    // –ü—Ä–æ—Å—Ç–∞—è –º–∏–Ω–∏—Ñ–∏–∫–∞—Ü–∏—è
    const minifiedJS = combinedJS
      .replace(/\/\/.*$/gm, '') // –£–¥–∞–ª—è–µ–º –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      .replace(/\/\*[\s\S]*?\*\//g, '') // –£–¥–∞–ª—è–µ–º –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
      .replace(/\s+/g, ' ') // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
      .replace(/\s*{\s*/g, '{') // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–∫–æ–±–æ–∫
      .replace(/\s*}\s*/g, '}') // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–∫–æ–±–æ–∫
      .replace(/\s*;\s*/g, ';') // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Ç–æ—á–µ–∫ —Å –∑–∞–ø—è—Ç–æ–π
      .replace(/\s*,\s*/g, ',') // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ –∑–∞–ø—è—Ç—ã—Ö
      .replace(/\s*\(\s*/g, '(') // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–∫–æ–±–æ–∫
      .replace(/\s*\)\s*/g, ')') // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –≤–æ–∫—Ä—É–≥ —Å–∫–æ–±–æ–∫
      .trim();
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    fs.writeFileSync(OUTPUT_FILE, minifiedJS);
    
    const stats = fs.statSync(OUTPUT_FILE);
    const fileSizeInKB = (stats.size / 1024).toFixed(2);
    
    console.log(`‚úÖ JavaScript —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!`);
    console.log(`üìÅ –§–∞–π–ª: ${OUTPUT_FILE}`);
    console.log(`üìä –†–∞–∑–º–µ—Ä: ${fileSizeInKB} KB`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ JavaScript:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
buildJS(); 